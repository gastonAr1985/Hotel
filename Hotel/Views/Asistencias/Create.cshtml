@model Hotel.Models.Asistencia

@{
    ViewData["Title"] = "Create";
}
@{ List<AsistenciaEnum> listaAsistencia = (List<AsistenciaEnum>)ViewData["as"];}


<h4>Asistencias</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="EmpleadoId" class="control-label">Empleado</label>
                    
                <select asp-for="EmpleadoId" class="form-control"asp-items="@ViewBag.Empleados">
                <option>Selecione un Empleado</option>
                </select>

                <span asp-validation-for="EmpleadoId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Dia" class="control-label"></label>
                <input asp-for="Dia" class="form-control" />
                <span asp-validation-for="Dia" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Estado" class="control-label">Asistencia</label>
                <select asp-for="Estado" class="form-control">
                    @foreach (AsistenciaEnum asistencia in listaAsistencia)
                    {
                        <option>@asistencia.ToString()</option>
                    }
                </select>
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Añadir" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<br />
<div>
    <a asp-action="Index">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
